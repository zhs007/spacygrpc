# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: spacy.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='spacy.proto',
  package='spacy',
  syntax='proto3',
  serialized_pb=_b('\n\x0bspacy.proto\x12\x05spacy\"3\n\x07\x43ommand\x12\x1b\n\x03\x63md\x18\x01 \x01(\x0e\x32\x0e.spacy.CMDTYPE\x12\x0b\n\x03str\x18\x02 \x01(\t\"7\n\x07NERInfo\x12\x0b\n\x03\x65nt\x18\x01 \x01(\t\x12\x10\n\x08labelstr\x18\x02 \x01(\t\x12\r\n\x05label\x18\x03 \x01(\x05\"(\n\x08ReplyNER\x12\x1c\n\x04info\x18\x01 \x03(\x0b\x32\x0e.spacy.NERInfo\"X\n\x0cReplyCommand\x12\x1b\n\x03\x63md\x18\x01 \x01(\x0e\x32\x0e.spacy.CMDTYPE\x12#\n\x08ReplyNER\x18\x02 \x01(\x0b\x32\x0f.spacy.ReplyNERH\x00\x42\x06\n\x04\x64\x61ta*\x12\n\x07\x43MDTYPE\x12\x07\n\x03NER\x10\x00\x32G\n\tSpacyServ\x12:\n\rstreamCommand\x12\x0e.spacy.Command\x1a\x13.spacy.ReplyCommand\"\x00(\x01\x30\x01\x62\x06proto3')
)

_CMDTYPE = _descriptor.EnumDescriptor(
  name='CMDTYPE',
  full_name='spacy.CMDTYPE',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NER', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=264,
  serialized_end=282,
)
_sym_db.RegisterEnumDescriptor(_CMDTYPE)

CMDTYPE = enum_type_wrapper.EnumTypeWrapper(_CMDTYPE)
NER = 0



_COMMAND = _descriptor.Descriptor(
  name='Command',
  full_name='spacy.Command',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cmd', full_name='spacy.Command.cmd', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='str', full_name='spacy.Command.str', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=73,
)


_NERINFO = _descriptor.Descriptor(
  name='NERInfo',
  full_name='spacy.NERInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ent', full_name='spacy.NERInfo.ent', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='labelstr', full_name='spacy.NERInfo.labelstr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='label', full_name='spacy.NERInfo.label', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=130,
)


_REPLYNER = _descriptor.Descriptor(
  name='ReplyNER',
  full_name='spacy.ReplyNER',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='spacy.ReplyNER.info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=132,
  serialized_end=172,
)


_REPLYCOMMAND = _descriptor.Descriptor(
  name='ReplyCommand',
  full_name='spacy.ReplyCommand',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cmd', full_name='spacy.ReplyCommand.cmd', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ReplyNER', full_name='spacy.ReplyCommand.ReplyNER', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='data', full_name='spacy.ReplyCommand.data',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=174,
  serialized_end=262,
)

_COMMAND.fields_by_name['cmd'].enum_type = _CMDTYPE
_REPLYNER.fields_by_name['info'].message_type = _NERINFO
_REPLYCOMMAND.fields_by_name['cmd'].enum_type = _CMDTYPE
_REPLYCOMMAND.fields_by_name['ReplyNER'].message_type = _REPLYNER
_REPLYCOMMAND.oneofs_by_name['data'].fields.append(
  _REPLYCOMMAND.fields_by_name['ReplyNER'])
_REPLYCOMMAND.fields_by_name['ReplyNER'].containing_oneof = _REPLYCOMMAND.oneofs_by_name['data']
DESCRIPTOR.message_types_by_name['Command'] = _COMMAND
DESCRIPTOR.message_types_by_name['NERInfo'] = _NERINFO
DESCRIPTOR.message_types_by_name['ReplyNER'] = _REPLYNER
DESCRIPTOR.message_types_by_name['ReplyCommand'] = _REPLYCOMMAND
DESCRIPTOR.enum_types_by_name['CMDTYPE'] = _CMDTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), dict(
  DESCRIPTOR = _COMMAND,
  __module__ = 'spacy_pb2'
  # @@protoc_insertion_point(class_scope:spacy.Command)
  ))
_sym_db.RegisterMessage(Command)

NERInfo = _reflection.GeneratedProtocolMessageType('NERInfo', (_message.Message,), dict(
  DESCRIPTOR = _NERINFO,
  __module__ = 'spacy_pb2'
  # @@protoc_insertion_point(class_scope:spacy.NERInfo)
  ))
_sym_db.RegisterMessage(NERInfo)

ReplyNER = _reflection.GeneratedProtocolMessageType('ReplyNER', (_message.Message,), dict(
  DESCRIPTOR = _REPLYNER,
  __module__ = 'spacy_pb2'
  # @@protoc_insertion_point(class_scope:spacy.ReplyNER)
  ))
_sym_db.RegisterMessage(ReplyNER)

ReplyCommand = _reflection.GeneratedProtocolMessageType('ReplyCommand', (_message.Message,), dict(
  DESCRIPTOR = _REPLYCOMMAND,
  __module__ = 'spacy_pb2'
  # @@protoc_insertion_point(class_scope:spacy.ReplyCommand)
  ))
_sym_db.RegisterMessage(ReplyCommand)



_SPACYSERV = _descriptor.ServiceDescriptor(
  name='SpacyServ',
  full_name='spacy.SpacyServ',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=284,
  serialized_end=355,
  methods=[
  _descriptor.MethodDescriptor(
    name='streamCommand',
    full_name='spacy.SpacyServ.streamCommand',
    index=0,
    containing_service=None,
    input_type=_COMMAND,
    output_type=_REPLYCOMMAND,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_SPACYSERV)

DESCRIPTOR.services_by_name['SpacyServ'] = _SPACYSERV

# @@protoc_insertion_point(module_scope)
